@Library('jenkins-shared-library@master') _
pipeline {
    agent {
        label 'terraform-build-agent'
    }
    
    parameters {
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'Select whether to apply or destroy infrastructure.')
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('Tflint') {
            when {
                expression { params.ACTION == 'apply' }
            }
            steps {
                container('terraform') {
                    script {
                        tfLint('pipelines/project-02/ec2')
                    }
                }
            }
        }
        
        stage('Terraform Init') {
            steps {
                withCredentials([
                    string(credentialsId: 'AWS_ACCESS_KEY_ID', variable: 'AWS_ACCESS_KEY_ID'),
                    string(credentialsId: 'AWS_SECRET_ACCESS_KEY', variable: 'AWS_SECRET_ACCESS_KEY')
                ]) {
                    withAWS(region: 'us-west-2') {
                        container('terraform') {
                            script {
                                terraform.init('pipelines/project-02/ec2', 'cat-jenkins-terraform', 'jenkins/terraform.tfstate', 'us-west-2')
                            }
                        }
                    }
                }
            }
        }
        
        // ... (rest of the pipeline remains the same)
        
        stage('Terraform Apply/Destroy') {
            when {
                allOf {
                    branch 'main'
                    not {
                        changeRequest()
                    }
                }
            }
            steps {
                withCredentials([
                    string(credentialsId: 'AWS_ACCESS_KEY_ID', variable: 'AWS_ACCESS_KEY_ID'),
                    string(credentialsId: 'AWS_SECRET_ACCESS_KEY', variable: 'AWS_SECRET_ACCESS_KEY')
                ]) {
                    withAWS(region: 'us-west-2') {
                        container('terraform') {
                            script {
                                if (params.ACTION == 'apply') {
                                    terraform.apply('pipelines/project-02/ec2')
                                } else if (params.ACTION == 'destroy') {
                                    terraform.destroy('pipelines/project-02/ec2')
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    post {
        always {
            script {
                emailNotification('sulaiman@crunchops.com')
            }
        }
    }
}
