@Library('jenkins-shared-library@master') _

pipeline {
    agent {
        label 'terraform-build-agent'
    }
    
    parameters {
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'Select whether to apply or destroy infrastructure.')
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('Tflint') {
            when {
                expression { params.ACTION == 'apply' }
            }
            steps {
                container('terraform') {
                    script {
                        tfLint('pipelines/project-02/ec2')
                    }
                }
            }
        }
        
        stage('Terraform Init') {
            steps {
                container('terraform') {
                    script {
                        terraformWithCredentials('init', 'pipelines/project-02/ec2')
                    }
                }
            }
        }
        
        stage('Checkov') {
            when {
                expression { params.ACTION == 'apply' }
            }
            steps {
                container('terraform') {
                    script {
                        checkovScan('pipelines/project-02/ec2')
                    }
                }
            }
        }
        
        stage('Terraform Plan') {
            when {
                expression { params.ACTION == 'apply' }
            }
            steps {
                container('terraform') {
                    script {
                        terraformWithCredentials('plan', 'pipelines/project-02/ec2')
                    }
                }
            }
        }
        
        stage('Terraform Apply/Destroy') {
            when {
                allOf {
                    branch 'main'
                    not {
                        changeRequest()
                    }
                }
            }
            steps {
                container('terraform') {
                    script {
                        def action = params.ACTION == 'apply' ? 'apply' : 'destroy'
                        terraformWithCredentials(action, 'pipelines/project-02/ec2')
                    }
                }
            }
        }
    }
    
    post {
        always {
            script {
                emailNotification('sulaiman@crunchops.com')
            }
        }
    }
}
